{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Card/Card.jsx","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Cards/Card/Card.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","CardComponent","className","cardTitle","value","lastUpdate","cardSubtitle","Grid","item","component","Card","xs","md","cx","styles","card","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toDateString","Cards","data","confirmed","recovered","deaths","container","spacing","justify","infected","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b5d33f80.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2itxt\",\"infected\":\"Cards_infected__16siV\",\"recovered\":\"Cards_recovered__3r5Py\",\"deaths\":\"Cards_deaths__3xXjq\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Card.module.css';\r\n\r\nconst CardComponent = ({ className, cardTitle, value, lastUpdate, cardSubtitle}) => (\r\n    <Grid item component={Card} xs={12} md={3} className={cx(styles.card, className)}>\r\n        <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n                {cardTitle}\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n                <CountUp start={0} end={value} duration={2.5} separator=\",\"/>\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n                {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n                {cardSubtitle}\r\n            </Typography>\r\n        </CardContent>\r\n    </Grid>\r\n);\r\n\r\nexport default CardComponent;","import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport CardComponent from './Card/Card';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n    if (!confirmed){\r\n        return 'Loading ...'\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <CardComponent\r\n                    className={styles.infected}\r\n                    cardTitle=\"Infected\"\r\n                    value={confirmed.value}\r\n                    lastUpdate={lastUpdate}\r\n                    cardSubtitle=\"Number of active cases from COVID-19.\"\r\n                />\r\n                <CardComponent\r\n                    className={styles.recovered}\r\n                    cardTitle=\"Recovered\"\r\n                    value={recovered.value}\r\n                    lastUpdate={lastUpdate}\r\n                    cardSubtitle=\"Number of recoveries from COVID-19.\"\r\n                    />\r\n                <CardComponent\r\n                    className={styles.deaths}\r\n                    cardTitle=\"Deaths\"\r\n                    value={deaths.value}\r\n                    lastUpdate={lastUpdate}\r\n                    cardSubtitle=\"Number of deaths caused by COVID-19.\"\r\n                />\r\n\r\n            </Grid>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n\r\n    if(country){\r\n        changeableUrl = `${url}/countries/${country}`\r\n    }\r\n\r\n    try {\r\n        const { data: {confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableUrl);\r\n        return { confirmed, recovered, deaths, lastUpdate};\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const {data} = await axios.get(`${url}/daily`);\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n\r\n        return modifiedData;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data: { countries }} = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((country) => country.name);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data:{ confirmed, deaths, recovered}, country }) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData (await fetchDailyData());\r\n        }\r\n\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length ? (<Line\r\n            data={{\r\n                labels: dailyData.map(({ date }) => date),\r\n                datasets: [{\r\n                    data: dailyData.map(({ confirmed }) => confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill: true,\r\n                },{\r\n                    data: dailyData.map(({ deaths }) => deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: 'red',\r\n                    backgroundColor: 'rgba(255,0,0,.5)',\r\n                    fill: true,\r\n                }],\r\n            }}\r\n        />) : null\r\n    );\r\n\r\n    const barChart = (\r\n        confirmed ? (\r\n            <Bar\r\n                data={{\r\n                    labels: ['Infected','Recovered', 'Deaths'],\r\n                    datasets: [{\r\n                        label: 'People',\r\n                        backgroundColor: ['rgba(0,0,255,0.5)','rgba(0,255,0,0.5)','rgba(255,0,0,0.5)'],\r\n                        data: [confirmed.value, recovered.value, deaths.value]\r\n                    }]\r\n\r\n                }}\r\n                options={{\r\n                    legend: { display: false},\r\n                    title: { display: true, text:`Current state in ${country}`}\r\n                }}\r\n            />\r\n        ) : null\r\n    );\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n\r\n        fetchAPI();\r\n    }, [setFetchedCountries])\r\n\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n\r\n                {fetchedCountries.map((country,i) => <option key={i} value={country}>{country}</option>)}\r\n\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react'\r\n\r\nimport { Cards, Chart, CountryPicker} from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\n\r\nimport coronaImage from './images/image.png';\r\n\r\nclass App extends React.Component {\r\n\r\n    state = {\r\n        data: {},\r\n        country: ''\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n        this.setState( {data: fetchedData} )\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country);\r\n        this.setState({ data: fetchedData, country: country});\r\n    }\r\n\r\n    render() {\r\n        const { data, country } = this.state;\r\n\r\n        return (\r\n            <div className={styles.container}>\r\n                <img className={styles.image} src={coronaImage} alt=\"COVID-19\"/>\r\n                <Cards data={data}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data={data} country={country}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />, document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1sElt\",\"image\":\"App_image__1fdZp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__5a2F4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2sjIi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2XNKr\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}